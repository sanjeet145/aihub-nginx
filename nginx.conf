events {}

http {
    upstream auth_service {
        server  aihub-authentication.onrender.com; 
    }

    # upstream model_service {
    #     server something.com; 
    # }
    log_format custom '$remote_addr - $host - "$request" - $status '
                  '"$http_user_agent" - "Auth: $http_authorization"';

    access_log /dev/stdout custom;
    # proxy_set_header 'test' 'test_value';
    # add_header 'Authorization' '$http_authorization' always;
    # add_header 'test' 'test_value' always;
    # proxy_set_header Authorization $http_authorization;
    # proxy_set_header X-Real-IP $remote_addr;
        

    server {
        listen 80;
        # server_name _;


        location /auth/ {
            proxy_pass http://auth_service/api/;
            proxy_ssl_server_name on;
            proxy_set_header Host aihub-authentication.onrender.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
    
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;

            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain; charset=UTF-8';
                return 204;
            }
        }



        # Route for Model service
       location /model/maternalrisk/ {
    proxy_pass http://maternal-risk-model.onrender.com/;
    proxy_ssl_server_name on;

    proxy_set_header Host maternal-risk-model.onrender.com;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    # proxy_set_header 'Authorization' $http_authorization;
    proxy_set_header 'test' 'test_value';
    # proxy_pass_request_headers on;

    proxy_set_header Authorization $http_authorization;
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;

    if ($request_method = OPTIONS) {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Length' 0;
        add_header 'Content-Type' 'text/plain; charset=UTF-8';
        return 204;
        }
    }
    location /testing/ {
    if ($request_method = OPTIONS) {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, test, Test' always;
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Length' 0;
        add_header 'Content-Type' 'text/plain; charset=UTF-8';
        return 204;
    }

    proxy_pass http://testing-w6gg.onrender.com/;  
    proxy_redirect off;

    proxy_set_header Host testing-w6gg.onrender.com;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Authorization $http_authorization;
    proxy_set_header Origin $http_origin;

    add_header 'X-From-Nginx' 'true' always;
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, test, Test' always;
}


#  location /testing/ {
#             if ($request_method = OPTIONS) {
#         add_header 'Access-Control-Allow-Origin' '*' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#         add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, test, Test' always;
#         add_header 'Access-Control-Max-Age' 1728000;
#         add_header 'Content-Length' 0;
#         add_header 'Content-Type' 'text/plain; charset=UTF-8';
#         return 204;
#             }
#     proxy_pass http://testing-w6gg.onrender.com/;   # keep the slash
#     proxy_redirect off;

#     proxy_set_header Host testing-w6gg.onrender.com;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;
#     proxy_set_header Authorization $http_authorization;
#     proxy_set_header Origin $http_origin;

#     add_header 'Access-Control-Allow-Origin' '*' always;
#     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#     add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, test, Test' always;
#     add_header 'X-From-Nginx' 'true' always;

#     }
    
    
    location /debug_headers {
        default_type text/plain;
        return 200 "$http_authorization\n";
    }
    }
}
